<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloudinary on Jimmy Song</title>
    <link>https://jimmysong.io/tags/cloudinary/</link>
    <description>Recent content in Cloudinary on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>jimmysong@jimmysong.io (Jimmy Song(宋净超))</managingEditor>
    <webMaster>jimmysong@jimmysong.io (Jimmy Song(宋净超))</webMaster>
    <lastBuildDate>Sun, 29 Oct 2017 15:24:19 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/tags/cloudinary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cloudinary Go</title>
      <link>https://jimmysong.io/posts/cloudinary-go/</link>
      <pubDate>Sun, 29 Oct 2017 15:24:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloudinary-go/</guid>
      <description>Cloudinary-go is a Go client library and CLI tool to upload static assets to the Cloudinary service.
Installation Install the CLI tool and the library with:
go get github.com/rootsongjc/cloudinary-go/cloudinary  Or download the release binary from release.
Configuration Create a default configuration file named ${HOME}/.cloudinary.toml
[cloudinary] uri=cloudinary://api_key:api_secret@cloud_name # check your cloudinary dashboard to the the uri prepend = &amp;quot;images&amp;quot; # default cloudinary folder  Usage A CLI tool to upload static assets to the Cloudinary service.</description>
    </item>
    
    <item>
      <title>个人网站中的静态文件云存储选择</title>
      <link>https://jimmysong.io/posts/static-website-storage/</link>
      <pubDate>Tue, 17 Oct 2017 22:33:34 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/static-website-storage/</guid>
      <description>我推荐将静态文件跟网站的代码、主题、主体文件分开存储，这样的好处是： 可以使用CDN加快静态文件的访问速度 单独管理静态文件，方便重复应用 可以使</description>
    </item>
    
  </channel>
</rss>