<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Jimmy Song</title>
    <link>https://jimmysong.io/categories/devops/</link>
    <description>Recent content in Devops on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>jimmysong@jimmysong.io (Jimmy Song(宋净超))</managingEditor>
    <webMaster>jimmysong@jimmysong.io (Jimmy Song(宋净超))</webMaster>
    <lastBuildDate>Mon, 21 Aug 2017 16:56:45 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>迁移传统应用到Kubernetes步骤详解——以Hadoop YARN为例</title>
      <link>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</link>
      <pubDate>Mon, 21 Aug 2017 16:56:45 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</guid>
      <description>前言 本文已归档到 kubernetes-handbook 【第三章用户指南】的【在Kubernetes中开发部署应用】小节中，一切更新以 GitHub 为准。 本文档不是说明如何在 kubernetes 中开发和部署应</description>
    </item>
    
    <item>
      <title>使用Jenkins进行持续构建与发布应用到kubernetes集群中</title>
      <link>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</link>
      <pubDate>Tue, 27 Jun 2017 20:52:57 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</guid>
      <description>本文已归档到kubernetes-handbook中的【最佳实践—使用Jenkins进行持续构建与发布】章节中，一切内容以kubernete</description>
    </item>
    
    <item>
      <title>使用API blueprint创建API文档</title>
      <link>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</link>
      <pubDate>Fri, 23 Jun 2017 12:24:12 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</guid>
      <description>在进行微服务开发的过程中，为了保证最终开发的系统跟最初的设计保持一致，约定RESTful接口之间的调用方法，我们需要将API设计文档化，因此</description>
    </item>
    
    <item>
      <title>使用Wercker进行持续构建与发布</title>
      <link>https://jimmysong.io/posts/continuous-integration-with-wercker/</link>
      <pubDate>Thu, 22 Jun 2017 18:08:51 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/continuous-integration-with-wercker/</guid>
      <description>本文介绍了wercker和它的基本用法，并用我GitHub上的magpie应用作为示例，讲解如何给GitHub项目增加wercker构建流程</description>
    </item>
    
    <item>
      <title>开源微服务管理平台fabric8简介</title>
      <link>https://jimmysong.io/posts/fabric8-introduction/</link>
      <pubDate>Mon, 10 Apr 2017 21:39:00 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/fabric8-introduction/</guid>
      <description>前言 无意中发现Fabric8这个对于Java友好的开源微服务管理平台。 其实这在这里发现的Achieving CI/CD with Kubernetes（by Ramit Surana,on</description>
    </item>
    
    <item>
      <title>新浪微博开源的docker管理平台OpenDCP</title>
      <link>https://jimmysong.io/posts/weibo-opendcp/</link>
      <pubDate>Fri, 10 Mar 2017 23:54:06 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/weibo-opendcp/</guid>
      <description>前几天看到微博开源的docker管理平台opendcp，今天抽空研究了一下。 OpenDCP是一个基于Docker的云资源管理与调度平台，集镜</description>
    </item>
    
    <item>
      <title>开源镜像定义工具Packer简介</title>
      <link>https://jimmysong.io/posts/packer-intro/</link>
      <pubDate>Thu, 09 Mar 2017 10:58:42 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/packer-intro/</guid>
      <description>昨天研究了下Vagrant，感觉它的虚拟机ruby格式定义很麻烦，经人指点还有一个叫做packer的东西，也是Hashicorp这家公司出品</description>
    </item>
    
    <item>
      <title>Vagrant介绍-从使用到放弃再到掌握完全指南</title>
      <link>https://jimmysong.io/posts/vagrant-intro/</link>
      <pubDate>Wed, 08 Mar 2017 20:40:08 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/vagrant-intro/</guid>
      <description>起源 久闻Vagrant大名，之前经常看到有开源项目使用它作为分布式开发的环境配置。 因为今天在看contiv正好里面使用vagrant搭建的开</description>
    </item>
    
  </channel>
</rss>