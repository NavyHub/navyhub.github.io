<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song</title>
    <link>https://jimmysong.io/</link>
    <description>Recent content on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>jimmysong@jimmysong.io (Jimmy Song(宋净超))</managingEditor>
    <webMaster>jimmysong@jimmysong.io (Jimmy Song(宋净超))</webMaster>
    <lastBuildDate>Wed, 30 May 2018 11:50:55 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Envoy最新官方文档中文版发布——由Service Mesh爱好者倾情奉献</title>
      <link>https://jimmysong.io/posts/envoyproxy-docs-cn-1.7-release/</link>
      <pubDate>Wed, 30 May 2018 11:50:55 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/envoyproxy-docs-cn-1.7-release/</guid>
      <description>Envoy ——为云原生应用而设计、开源的边缘和服务代理、Istio Service Mesh 默认的数据平面，最新官方文档中文版，由 Service Mesh 爱好者们倾情奉献，欢迎大家共同学习和</description>
    </item>
    
    <item>
      <title>云原生应用的下一站</title>
      <link>https://jimmysong.io/posts/the-next-stage-of-cloud-native-apps/</link>
      <pubDate>Mon, 28 May 2018 16:52:30 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/the-next-stage-of-cloud-native-apps/</guid>
      <description>本文是我于5月20日在第四届南京全球技术周上【互联网技术专场】上的题为【云原生应用的下一站】的演讲的部分内容的文字整理。 云原生是什么？ CNC</description>
    </item>
    
    <item>
      <title>Hugo Universal主题使用指南</title>
      <link>https://jimmysong.io/posts/hugo-universal-theme-guide/</link>
      <pubDate>Fri, 25 May 2018 18:43:51 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/hugo-universal-theme-guide/</guid>
      <description>hugo-universal 这款主题适用于产品简介、公司介绍和门户网站。经过我修改后该主题有以下特点： 响应式设计 可自定义的登陆页面 多套 CSS style 可选，自由选择网站色系 移动端</description>
    </item>
    
    <item>
      <title>Envoy 最新官方文档翻译工作启动 - ServiceMesher 组织倾力打造</title>
      <link>https://jimmysong.io/posts/servicemesher-community/</link>
      <pubDate>Wed, 16 May 2018 14:47:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/servicemesher-community/</guid>
      <description>Envoy 是一款由 Lyft 开源的，使用 C++ 编写的 L7 代理和通信总线，目前是 CNCF 旗下的开源项目，代码托管在 GitHub 上，它也是 Istio service mesh 中默认的 data plane。我们发现它有很好</description>
    </item>
    
    <item>
      <title>云原生编程语言Ballerina介绍</title>
      <link>https://jimmysong.io/posts/introducing-cloud-native-programming-language-ballerina/</link>
      <pubDate>Sat, 12 May 2018 23:27:49 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/introducing-cloud-native-programming-language-ballerina/</guid>
      <description>当我第一眼看到 Ballerina 还真有点惊艳的感觉。Ballerina 这个单词的意思是“芭蕾舞女演员”。我想他们之所以给公司和这们语言起这个名字，可能是希望</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中使用 Envoy mesh 教程</title>
      <link>https://jimmysong.io/posts/envoy-mesh-in-kubernetes-tutorial/</link>
      <pubDate>Sat, 28 Apr 2018 20:26:53 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/envoy-mesh-in-kubernetes-tutorial/</guid>
      <description>本文是在 Kubernetes 集群中，使用 Envoy 来做 mesh，来为一个简单的使用 Python 编写的 Flask 应用程序做反向代理和负载均衡。 注：本教程中的示例来自 envoy-steps</description>
    </item>
    
    <item>
      <title>Envoy 的架构与基本术语</title>
      <link>https://jimmysong.io/posts/envoy-archiecture-and-terminology/</link>
      <pubDate>Fri, 27 Apr 2018 17:16:50 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/envoy-archiecture-and-terminology/</guid>
      <description>在了解一门技术之前一开始就要了解其中的基本概念和术语，只有融入了该语境才能理解这门技术。本文将为大家介绍 Envoy 中的基本术语和重点概念。 架构 下图是</description>
    </item>
    
    <item>
      <title>使用 Envoy 作为前端代理</title>
      <link>https://jimmysong.io/posts/envoy-as-front-proxy/</link>
      <pubDate>Sun, 22 Apr 2018 17:13:15 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/envoy-as-front-proxy/</guid>
      <description>Envoy 是一款由 Lyft 开源的，使用 C++ 编写的 L7 代理和通信总线，目前是 CNCF 旗下的开源项目，代码托管在 GitHub 上，它也是 Istio service mesh 中默认的 data plane。本文将给出使用 Envoy</description>
    </item>
    
    <item>
      <title>从 Docker 到 Kubernetes 中的容器网络图书资料分享</title>
      <link>https://jimmysong.io/posts/container-networking-from-docker-to-kubernetes-nginx/</link>
      <pubDate>Sat, 21 Apr 2018 10:07:20 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/container-networking-from-docker-to-kubernetes-nginx/</guid>
      <description>TL;DR 点此下载本书 PDF。 近日 Nginx 公司的 Michael Hausenblas 发布了一本关于 docker 和 kubernetes 中的容器网络的小册子。这份资料一共 72 页，是大家由浅入深的了解 Docker 和 Kubernetes 中的网络的很好的</description>
    </item>
    
    <item>
      <title>Istio Service Mesh 教程</title>
      <link>https://jimmysong.io/posts/istio-tutorial/</link>
      <pubDate>Wed, 18 Apr 2018 23:20:47 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-tutorial/</guid>
      <description>本文是 Istio 管理 Java 微服务的案例教程，使用的所有工具和软件全部基于开源方案，替换了 redhat-developer-demos/istio-tutorial 中的 minishift 环境，使用 kubernetes-vagrant-centos-cluster 替代，沿用了原有的微服务示例，使用 Zipkin 做分布式</description>
    </item>
    
    <item>
      <title>Istio 社区介绍与社区参与注意事项</title>
      <link>https://jimmysong.io/posts/istio-community-tips/</link>
      <pubDate>Sat, 14 Apr 2018 18:34:40 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-community-tips/</guid>
      <description>本文讲述了参与 Istio 社区和进行 Istio 开发时需要注意的事项。 工作组 绝大多数复杂的开源项目都是以工作组的方式组织的，要想为 Istio 社区做贡献可以加入到以下的工</description>
    </item>
    
    <item>
      <title>Istio中sidecar的注入及示例</title>
      <link>https://jimmysong.io/posts/istio-sidecar-injection-in-kubernetes/</link>
      <pubDate>Tue, 27 Mar 2018 19:58:48 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-sidecar-injection-in-kubernetes/</guid>
      <description>我们知道 Istio 通过向 Pod 中注入一个 sidecar 容器来将 Pod 纳入到 Istio service mesh 中的，那么这些 sidecar 容器的注入遵循什么样的规范，需要给每个 Pod 增加哪些配置信息才能纳入 Istio service mesh 中</description>
    </item>
    
    <item>
      <title>适用于kubernetes的应用开发部署流程同时集成Istio service mesh</title>
      <link>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</link>
      <pubDate>Mon, 26 Mar 2018 22:48:44 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</guid>
      <description>本文讲解了如何开发容器化应用，并使用Wercker持续集成工具构建docker镜像上传到docker镜像仓库中，然后在本地使用docker-</description>
    </item>
    
    <item>
      <title>为什么我们需要Istio？</title>
      <link>https://jimmysong.io/posts/why-do-we-need-istio/</link>
      <pubDate>Mon, 19 Mar 2018 23:43:33 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/why-do-we-need-istio/</guid>
      <description>本文翻译自Istio Why do I need it? 译者Jimmy Song 我最近没有多少时间去玩k8s，并承认Istio到底给k8s带来了什么方面有点迷失了。这是否会增</description>
    </item>
    
    <item>
      <title>Kubernetes中的Pause容器究竟是什么？</title>
      <link>https://jimmysong.io/posts/what-is-a-pause-container/</link>
      <pubDate>Sun, 18 Mar 2018 10:01:35 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/what-is-a-pause-container/</guid>
      <description>Pause容器，又叫Infra容器，本文将探究该容器的作用与原理。 我们知道在kubelet的配置中有这样一个参数： KUBELET_POD_INFRA_CONTAINER=--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest 上面是openshift</description>
    </item>
    
    <item>
      <title>Spring Boot快速开始指南</title>
      <link>https://jimmysong.io/posts/spring-boot-quick-start-guide/</link>
      <pubDate>Tue, 13 Mar 2018 11:29:15 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/spring-boot-quick-start-guide/</guid>
      <description>Spring Boot已成为当今最流行的微服务开发框架，本文是如何使用Spring Boot快速开始Web微服务开发的指南，我们将使创建一个可运行的包含内</description>
    </item>
    
    <item>
      <title>打造高效的Kubernetes命令行终端</title>
      <link>https://jimmysong.io/posts/configuring-efficient-kubernetes-cli-terminal/</link>
      <pubDate>Sun, 11 Mar 2018 09:36:49 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/configuring-efficient-kubernetes-cli-terminal/</guid>
      <description>本文介绍如何打造一个高效的Kubernetes命令行终端以及Kubernetes命令行操作。 为什么我们要打造高效的Kubernetes命令行</description>
    </item>
    
    <item>
      <title>CNCF - 云原生计算基金会简介</title>
      <link>https://jimmysong.io/posts/cncf-introduction/</link>
      <pubDate>Sun, 04 Mar 2018 18:03:39 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cncf-introduction/</guid>
      <description>CNCF，全称Cloud Native Computing Foundation（云原生计算基金会），口号是坚持和整合开源技术来编排容器作为微服务架构的一部分，其作为致力于</description>
    </item>
    
    <item>
      <title>Cloud Native Java（云原生Java）</title>
      <link>https://jimmysong.io/posts/cloud-native-java/</link>
      <pubDate>Fri, 23 Feb 2018 18:25:37 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-native-java/</guid>
      <description>这是我翻译的第三本Cloud Native技术书，前两本分别是： Cloud Native Go Cloud Native Python 至今网上都还没有该书的详细目录，翻译过程中我顺便整理了下该书的详细</description>
    </item>
    
    <item>
      <title>Kubernetes高级开发者指南</title>
      <link>https://jimmysong.io/posts/kubernetes-advance-developer-guide/</link>
      <pubDate>Sun, 11 Feb 2018 10:32:46 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-advance-developer-guide/</guid>
      <description>本文假定您已经熟悉 Kubernetes 的核心概念并可以轻松的部署自己的应用程序。如果还不能的话，您需要先查看下中级应用开发者主题。 在浏览了本页面及其链接的内容</description>
    </item>
    
    <item>
      <title>Setting Up a Kubernetes Cluster With Vagrant and Virtualbox</title>
      <link>https://jimmysong.io/posts/setting-up-a-kubernetes-cluster-with-vagrant/</link>
      <pubDate>Sun, 04 Feb 2018 09:55:58 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/setting-up-a-kubernetes-cluster-with-vagrant/</guid>
      <description>Setting up a kubernetes cluster with Vagrant and Virtualbox Using vagrant file to build a kubernetes cluster which consists of 1 master(also as node) and 3 nodes. You don&amp;rsquo;t have to create complicated ca files or configuration.
See in Github: kubernetes-vagrant-centos-cluster
Why don&amp;rsquo;t do that with kubeadm Because I want to setup the etcd, apiserver, controller, scheduler without docker container.
Architecture We will create a Kubernetes 1.9.1+ cluster with 3 nodes which contains the components below:</description>
    </item>
    
    <item>
      <title>Kubernetes中的开放接口CRI、CNI、CSI</title>
      <link>https://jimmysong.io/posts/kubernetes-open-interfaces-cri-cni-csi/</link>
      <pubDate>Mon, 29 Jan 2018 12:26:38 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-open-interfaces-cri-cni-csi/</guid>
      <description>Kubernetes作为云原生应用的最佳部署平台，已经开放了容器运行时接口（CRI）、容器网络接口（CNI）和容器存储接口（CSI），这些接</description>
    </item>
    
    <item>
      <title>Kubernetes中的Volume介绍</title>
      <link>https://jimmysong.io/posts/kubernetes-volumes-introduction/</link>
      <pubDate>Fri, 26 Jan 2018 11:50:04 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-volumes-introduction/</guid>
      <description>容器磁盘上的文件的生命周期是短暂的，这就使得在容器中运行重要应用时会出现一些问题。首先，当容器崩溃时，kubelet 会重启它，但是容器中的文</description>
    </item>
    
    <item>
      <title>Kubernetes中的Taint和Toleration（污点和容忍）</title>
      <link>https://jimmysong.io/posts/kubernetes-taint-and-toleration/</link>
      <pubDate>Sat, 20 Jan 2018 12:39:14 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-taint-and-toleration/</guid>
      <description>Taint（污点）和 Toleration（容忍）可以作用于 node 和 pod 上，其目的是优化 pod 在集群间的调度，这跟节点亲和性类似，只不过它们作用的方式相</description>
    </item>
    
    <item>
      <title>Kubernetes中的Persistent Volume解析</title>
      <link>https://jimmysong.io/posts/kubernetes-persistent-volume/</link>
      <pubDate>Mon, 08 Jan 2018 20:00:48 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-persistent-volume/</guid>
      <description>本文档介绍了 Kubernetes 中 PersistentVolume 的当前状态。这是 Kubernetes 官方中文文档的初稿，欢迎在官方PR反馈问题，建议您在阅读本文档前先熟悉 volume。本文同时归档到 kub</description>
    </item>
    
    <item>
      <title>使用OpenEBS作为Kubernetes持久化存储</title>
      <link>https://jimmysong.io/posts/using-openebs-as-kubernetes-persistent-volume/</link>
      <pubDate>Fri, 05 Jan 2018 16:33:45 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/using-openebs-as-kubernetes-persistent-volume/</guid>
      <description>OpenEBS是一款使用Go语言编写的基于容器的块存储开源软件。OpenEBS使得在容器中运行关键性任务和需要数据持久化的负载变得更可靠。 O</description>
    </item>
    
    <item>
      <title>配置Kubernetes DNS服务kube-dns</title>
      <link>https://jimmysong.io/posts/configuring-kubernetes-kube-dns/</link>
      <pubDate>Wed, 03 Jan 2018 16:16:01 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/configuring-kubernetes-kube-dns/</guid>
      <description>在我们安装Kubernetes集群的时候就已经安装了kube-dns插件，这个插件也是官方推荐安装的。通过将 Service 注册到 DNS 中，Kuberente</description>
    </item>
    
    <item>
      <title>OpenFaaS快速入门指南</title>
      <link>https://jimmysong.io/posts/openfaas-quick-start/</link>
      <pubDate>Tue, 26 Dec 2017 21:16:04 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/openfaas-quick-start/</guid>
      <description>OpenFaaS快速入门指南 OpenFaaS一款高人气的开源的faas框架，可以直接在Kubernetes上运行，也可以基于Swarm或容器</description>
    </item>
    
    <item>
      <title>Kubernetes与云原生2017年年终总结及2018年展望</title>
      <link>https://jimmysong.io/posts/kubernetes-cloud-native-summary-for-2017-and-outlook/</link>
      <pubDate>Tue, 26 Dec 2017 16:26:28 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-cloud-native-summary-for-2017-and-outlook/</guid>
      <description>Kubernetes与云原生2017年年终总结与2018年展望 本文主要关于Kubernetes及云原生生态圈在2017年取得的进展，及对20</description>
    </item>
    
    <item>
      <title>云原生应用之路</title>
      <link>https://jimmysong.io/posts/from-kubernetes-to-cloud-native/</link>
      <pubDate>Wed, 20 Dec 2017 15:08:02 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/from-kubernetes-to-cloud-native/</guid>
      <description>从Kubernetes到Cloud Native——云原生应用之路，这是我最近在 ArchSummit2017北京站 和 数人云&amp;amp;Talki</description>
    </item>
    
    <item>
      <title>手动升级kubernetes集群</title>
      <link>https://jimmysong.io/posts/upgrade-kubernetes-from-1.6-to-1.8/</link>
      <pubDate>Tue, 12 Dec 2017 17:13:34 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/upgrade-kubernetes-from-1.6-to-1.8/</guid>
      <description>手动升级kubernetes集群 为了使用kubernetes的新特性和只支持新版本kubernetes的配套软件，升级kubernetes迫</description>
    </item>
    
    <item>
      <title>Kubernetes Pod Preset</title>
      <link>https://jimmysong.io/posts/kubernetes-pod-preset/</link>
      <pubDate>Mon, 11 Dec 2017 10:50:24 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-pod-preset/</guid>
      <description>Pod Preset 注意：PodPreset 资源对象只有 kubernetes 1.8 以上版本才支持。 Preset 就是预设，有时候想要让一批容器在启动的时候就注入一些信息，比如 secret、v</description>
    </item>
    
    <item>
      <title>从Kubernetes到Cloud Native——云原生应用之路</title>
      <link>https://jimmysong.io/posts/archsummit-beijing-2017-from-kubernetes-to-cloud-native/</link>
      <pubDate>Thu, 07 Dec 2017 12:11:29 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/archsummit-beijing-2017-from-kubernetes-to-cloud-native/</guid>
      <description>2017年，我们面临着架构变革的大时代，例如Kubernetes结束容器编排之争、Kafka发布1.0、Serverless逐渐发力、边缘计</description>
    </item>
    
    <item>
      <title>随时随地访问您的Kubernetes集群</title>
      <link>https://jimmysong.io/posts/kubernetes-anytime-anywhere/</link>
      <pubDate>Wed, 06 Dec 2017 16:23:15 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-anytime-anywhere/</guid>
      <description>设想一下，有一天你正在海上冲浪，突然你的智能手表上的电话响起，你的老板要你上线一个服务，而你早已在测试环境部署验证过没有问题，现在到了上线时</description>
    </item>
    
    <item>
      <title>Kubernetes中的自定义资源</title>
      <link>https://jimmysong.io/posts/kuberentes-crd-custom-resource/</link>
      <pubDate>Tue, 28 Nov 2017 11:52:40 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kuberentes-crd-custom-resource/</guid>
      <description>CRD-自定义资源 自定义资源是对Kubernetes API的扩展，kubernetes中的每个资源都是一个API对象的集合，例如我们在YAM</description>
    </item>
    
    <item>
      <title>什么是serverless架构？</title>
      <link>https://jimmysong.io/posts/what-is-serverless/</link>
      <pubDate>Fri, 24 Nov 2017 23:46:35 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/what-is-serverless/</guid>
      <description>Serverless架构 Serverless（无服务器架构）指的是由开发者实现的服务端逻辑运行在无状态的计算容器中，它由事件触发， 完全被第三</description>
    </item>
    
    <item>
      <title>从外部访问Kubernetes中的Pod</title>
      <link>https://jimmysong.io/posts/accessing-kubernetes-pods-from-outside-of-the-cluster/</link>
      <pubDate>Tue, 21 Nov 2017 20:13:01 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/accessing-kubernetes-pods-from-outside-of-the-cluster/</guid>
      <description>前面几节讲到如何访问kubneretes集群，本文主要讲解访问kubenretes中的Pod和Serivce的集中方式，包括如下几种： hostNetwork hostPort NodePort</description>
    </item>
    
    <item>
      <title>认识Kubernetes中的用户与身份认证授权</title>
      <link>https://jimmysong.io/posts/user-authentication-in-kubernetes/</link>
      <pubDate>Tue, 14 Nov 2017 13:48:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/user-authentication-in-kubernetes/</guid>
      <description>Kubernetes 中的用户与身份认证授权 在安装集群的时候我们在 master 节点上生成了一堆证书、token，还在 kubelet 的配置中用到了 bootstrap token，安装各种应用时，为了能够</description>
    </item>
    
    <item>
      <title>Kubernetes ConfigMap热更新测试</title>
      <link>https://jimmysong.io/posts/kubernetes-configmap-hot-update/</link>
      <pubDate>Wed, 08 Nov 2017 18:58:06 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-configmap-hot-update/</guid>
      <description>ConfigMap热更新测试 ConfigMap是用来存储配置文件的kubernetes资源对象，所有的配置内容都存储在etcd中，下文主要是</description>
    </item>
    
    <item>
      <title>在kubernetes集群上安装istio并测试bookinfo示例微服务</title>
      <link>https://jimmysong.io/posts/deploy-bookinfo-microservices-on-kubernetes-with-istio/</link>
      <pubDate>Mon, 06 Nov 2017 22:54:40 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/deploy-bookinfo-microservices-on-kubernetes-with-istio/</guid>
      <description>今年来以 Istio 和 Linkderd 为代表的 Service Mesh 蓬勃发展，大有成为下一代语言异构微服务架构的王者之范，今天又碰巧看到了 Red Hat 的 Burr Sutter 提出了8 Steps to Becoming Awesome with Kubernet</description>
    </item>
    
    <item>
      <title>Kubectl Cheatsheet</title>
      <link>https://jimmysong.io/posts/kubectl-cheatsheet/</link>
      <pubDate>Fri, 03 Nov 2017 16:38:36 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubectl-cheatsheet/</guid>
      <description>Kubctl 命令是操作 kubernetes 集群的最直接和最 skillful 的途径，这个60多MB大小的二进制文件，到底有啥能耐呢？本文是对官方文档的中文翻译，原文地址：https:/</description>
    </item>
    
    <item>
      <title>Kubernetes Dashboard中的身份认证详解</title>
      <link>https://jimmysong.io/posts/kubernetes-dashboard-upgrade/</link>
      <pubDate>Thu, 02 Nov 2017 16:41:21 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-dashboard-upgrade/</guid>
      <description>升级Dashboard 我们在kubernetes1.6的时候同时安装了dashboard插件，该插件也是基于kubernetes1.6版本开</description>
    </item>
    
    <item>
      <title>Cloudinary Go</title>
      <link>https://jimmysong.io/posts/cloudinary-go/</link>
      <pubDate>Sun, 29 Oct 2017 15:24:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloudinary-go/</guid>
      <description>Cloudinary-go is a Go client library and CLI tool to upload static assets to the Cloudinary service.
Installation Install the CLI tool and the library with:
go get github.com/rootsongjc/cloudinary-go/cloudinary  Or download the release binary from release.
Configuration Create a default configuration file named ${HOME}/.cloudinary.toml
[cloudinary] uri=cloudinary://api_key:api_secret@cloud_name # check your cloudinary dashboard to the the uri prepend = &amp;quot;images&amp;quot; # default cloudinary folder  Usage A CLI tool to upload static assets to the Cloudinary service.</description>
    </item>
    
    <item>
      <title>如何翻译一本外文书</title>
      <link>https://jimmysong.io/posts/how-to-translate-a-book/</link>
      <pubDate>Fri, 27 Oct 2017 22:55:43 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/how-to-translate-a-book/</guid>
      <description>我是以下两本Cloud Native图书的译者： Cloud Native Go：已由电子工业出版社出版 Cloud Native Python：正在翻译中 同时我还参与了kubernetes</description>
    </item>
    
    <item>
      <title>使用Helm安装Nginx ingress</title>
      <link>https://jimmysong.io/posts/install-nginx-ingress-with-helm/</link>
      <pubDate>Fri, 27 Oct 2017 19:10:59 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/install-nginx-ingress-with-helm/</guid>
      <description>使用Helm安装Nginx ingress Nginx ingress 使用ConfigMap来管理Nginx配置，nginx是大家熟知的代理和负载均衡软件，比起Traefik来说</description>
    </item>
    
    <item>
      <title>使用Helm管理kubernetes原生应用</title>
      <link>https://jimmysong.io/posts/manage-kubernetes-native-app-with-helm/</link>
      <pubDate>Wed, 25 Oct 2017 17:15:23 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/manage-kubernetes-native-app-with-helm/</guid>
      <description>完本文后您应该可以自己创建chart，并创建自己的私有chart仓库。 Helm是一个kubernetes应用的包管理工具，用来管理chart</description>
    </item>
    
    <item>
      <title>使用StatefulSet部署有状态应用</title>
      <link>https://jimmysong.io/posts/using-statefulset/</link>
      <pubDate>Mon, 23 Oct 2017 14:29:07 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/using-statefulset/</guid>
      <description>StatefulSet 这个对象是专门用来部署用状态应用的，可以为Pod提供稳定的身份标识，包括hostname、启动顺序、DNS名称等。 下面以在kubernet</description>
    </item>
    
    <item>
      <title>Kubernetes相关资讯和情报链接分享</title>
      <link>https://jimmysong.io/posts/kubernetes-material-share/</link>
      <pubDate>Wed, 18 Oct 2017 14:57:16 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-material-share/</guid>
      <description>授人以鱼，不如授人以渔。下面的资料将有助于大家了解kubernetes生态圈当前发展状况和发展趋势，我特此整理相关资料如下。本文同时归档到k</description>
    </item>
    
    <item>
      <title>个人网站中的静态文件云存储选择</title>
      <link>https://jimmysong.io/posts/static-website-storage/</link>
      <pubDate>Tue, 17 Oct 2017 22:33:34 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/static-website-storage/</guid>
      <description>我推荐将静态文件跟网站的代码、主题、主体文件分开存储，这样的好处是： 可以使用CDN加快静态文件的访问速度 单独管理静态文件，方便重复应用 可以使</description>
    </item>
    
    <item>
      <title>Cloud Native幻灯片图书资料等汇总</title>
      <link>https://jimmysong.io/posts/cloud-native-slides-share/</link>
      <pubDate>Tue, 17 Oct 2017 21:04:21 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-native-slides-share/</guid>
      <description>很多人抱怨网上能够找到的关于Cloud Native云原生的资料匮乏，因此我专门整理了目前我所保存的资料到这样一个GitHub库中，日后会不断</description>
    </item>
    
    <item>
      <title>Hugo handbook</title>
      <link>https://jimmysong.io/posts/building-static-website-with-hugo/</link>
      <pubDate>Mon, 16 Oct 2017 22:30:35 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/building-static-website-with-hugo/</guid>
      <description>很多人问我 jimmysong.io 这个网站是怎么做出来的，我想有必要写本书给大家普及下静态网站构建的知识还有Hugo这个利器。 本手册将指导你如何使用Hugo构建静</description>
    </item>
    
    <item>
      <title>使用Heapster获取kubernetes集群对象的metric数据</title>
      <link>https://jimmysong.io/posts/using-heapster-to-get-object-metrics/</link>
      <pubDate>Mon, 16 Oct 2017 17:34:08 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/using-heapster-to-get-object-metrics/</guid>
      <description>使用Heapster获取kubernetes集群对象的metric数据 Heapster作为kubernetes安装过程中默认安装的一个插件，</description>
    </item>
    
    <item>
      <title>记Kubernetes中国用户大会KEUC2017</title>
      <link>https://jimmysong.io/posts/keuc-china-2017/</link>
      <pubDate>Sat, 14 Oct 2017 19:32:46 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/keuc-china-2017/</guid>
      <description>今天有幸受k8smeetup社区邀请来到杭州，参加Kubernetes中国用户大会简称KEUC，这已经是我第三次来杭州了，算是再续前缘吧！ 其</description>
    </item>
    
    <item>
      <title>Kubernetes与云原生应用概览</title>
      <link>https://jimmysong.io/posts/kubernetes-and-cloud-native-app-overview/</link>
      <pubDate>Thu, 12 Oct 2017 16:43:51 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-and-cloud-native-app-overview/</guid>
      <description>本文是我在公司内部的培训和分享的资料，去掉了其中的credential部分，分享给大家。本文深入浅出，高屋建瓴，没有深入到具体细节，主要是为</description>
    </item>
    
    <item>
      <title>Git常用命令与GitHub使用技巧技巧整理</title>
      <link>https://jimmysong.io/posts/github-tips/</link>
      <pubDate>Tue, 10 Oct 2017 17:55:36 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/github-tips/</guid>
      <description>1. GitHub中同步远程分支 查看本地已有分支 git remote -v 增加远程分支 git remote add upstream https://github.com/k8smeetup/kubernetes.github.io.git git fetch upstream git checkout master git merge upstream/master 2. 更新Git代码并对比 git remote -v git fetch origin master git log -p master.. origin/master git merge</description>
    </item>
    
    <item>
      <title>Kubernetes中的ResourceQuota和LimitRange配置资源限额</title>
      <link>https://jimmysong.io/posts/kubernetes-resourcequota-limitrange-management/</link>
      <pubDate>Tue, 10 Oct 2017 14:33:24 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-resourcequota-limitrange-management/</guid>
      <description>当用多个团队或者用户共用同一个集群的时候难免会有资源竞争的情况发生，这时候就需要对不同团队或用户的资源使用配额做出限制。 开启资源配额限制功能</description>
    </item>
    
    <item>
      <title>jimmysong.io网站更新日志</title>
      <link>https://jimmysong.io/posts/jimmysong-io-change-log/</link>
      <pubDate>Wed, 04 Oct 2017 11:18:27 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/jimmysong-io-change-log/</guid>
      <description>TODO 移动设备页面适配问题，手机中打开有些长代码页面会需要缩放 评论框一直是个问题，现在使用的 Gitment 当文章的 URL 改变后需要重新 initial 每篇文章的标题显示还需要</description>
    </item>
    
    <item>
      <title>喜迎国庆节jimmysong.io博客盛装改版</title>
      <link>https://jimmysong.io/posts/jimmysong-io-revision-20171001/</link>
      <pubDate>Mon, 02 Oct 2017 09:18:27 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/jimmysong-io-revision-20171001/</guid>
      <description>经过昨天一天的努力，我的博客(https://jimmysong.io) 成功改版，度过一个十分有意义的国庆节。🎈💐👏 更新记录 2017-10-01 替换了原来的 nixon</description>
    </item>
    
    <item>
      <title>Kubernetes中的Secret配置详解</title>
      <link>https://jimmysong.io/posts/kubernetes-secret-configuration/</link>
      <pubDate>Thu, 28 Sep 2017 21:20:49 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-secret-configuration/</guid>
      <description>Secret 对象类型用来保存敏感信息，例如密码、OAuth 令牌和 ssh key。将这些信息放在 secret 中比放在 pod 的定义中或者 docker 镜像中来说更加安全和灵活。参阅 Secret 设计</description>
    </item>
    
    <item>
      <title>使用gitment为你的网站添加评论框</title>
      <link>https://jimmysong.io/posts/creating-comment-box-with-gitment/</link>
      <pubDate>Sun, 24 Sep 2017 10:10:00 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/creating-comment-box-with-gitment/</guid>
      <description>强烈推荐一个网站评论插件 gitment 。该插件不需要服务端交互，使用 GitHub Issue 存储评论内容，直接在你的博客中引入 JS 代码即可。安装步骤参考 给你的静态博客增加留言</description>
    </item>
    
    <item>
      <title>DockOne社区Kubernetes实训北京站授课感悟</title>
      <link>https://jimmysong.io/posts/kubernetes-training-for-dockone-community/</link>
      <pubDate>Sat, 23 Sep 2017 19:17:08 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-training-for-dockone-community/</guid>
      <description>今天有幸受DockOne社区邀请，作为3 天烧脑式 Kubernetes 实战训练营 | 北京站最后一天培训的讲师，为大家讲解Cloud Native（云原生）和如何开发</description>
    </item>
    
    <item>
      <title>什么是Service Mesh（服务网格）</title>
      <link>https://jimmysong.io/posts/what-is-a-service-mesh/</link>
      <pubDate>Wed, 20 Sep 2017 21:56:04 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/what-is-a-service-mesh/</guid>
      <description>Service mesh 又译作 “服务网格”，作为服务间通信的基础设施层。Buoyant 公司的 CEO Willian Morgan 在他的这篇文章 WHAT’S A SERVICE MESH? AND WHY DO I NEED ONE? 中解释了什么是 Service M</description>
    </item>
    
    <item>
      <title>Istio Service Mesh官方文档中文版</title>
      <link>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</link>
      <pubDate>Wed, 20 Sep 2017 14:37:23 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</guid>
      <description>Istio是由Google、IBM和Lyft开源的微服务管理、保护和监控框架。Istio为希腊语，意思是”起航“。官方中文文档地址：http</description>
    </item>
    
    <item>
      <title>Kubernetes中Pod的生命周期</title>
      <link>https://jimmysong.io/posts/pod-lifecycle/</link>
      <pubDate>Tue, 19 Sep 2017 20:41:40 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/pod-lifecycle/</guid>
      <description>Pod 的生命周期对于应用的状态查询、故障检测和恢复是十分重要，比如在 spark on kubernetes 的例子中，spark 任务的状态其实就可以通过查询 driver pod 的状态来获得。这篇</description>
    </item>
    
    <item>
      <title>docker用户过渡到kubectl命令行指南</title>
      <link>https://jimmysong.io/posts/docker-cli-to-kubectl/</link>
      <pubDate>Sat, 16 Sep 2017 20:54:06 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-cli-to-kubectl/</guid>
      <description>对于没有使用过 kubernetes 的 docker 用户，如何快速掌握 kubectl 命令？kubectl 跟 docker 命令之间有什么区别和联系？ 在本文中，我们将向 docker-cli 用户介绍 Kubernetes 命令行如何与 api 进行交</description>
    </item>
    
    <item>
      <title>High Level Cloud Native From Kevin Hoffman</title>
      <link>https://jimmysong.io/posts/high-level-cloud-native-from-kevin-hoffman/</link>
      <pubDate>Fri, 15 Sep 2017 20:32:47 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/high-level-cloud-native-from-kevin-hoffman/</guid>
      <description>Kevin Hoffman(From Capital One, twitter @KevinHoffman was making a speech on TalkingData T11 Smart Data Summit. He addressed that 15 Factors of Cloud Native which based on Heroku&amp;rsquo;s original Twelve-Factor App, but he add more 3 another factors on it. Let&amp;rsquo;s have a look at the 15 factors of Cloud Native. 1. One codebase, one App Single version-controlled codebase, many deploys Multiple apps should not share code Microservices need separate</description>
    </item>
    
    <item>
      <title>运行支持kubernetes原生调度的spark程序-Spark on Kubernetes</title>
      <link>https://jimmysong.io/posts/running-spark-with-kubernetes-native-scheduler/</link>
      <pubDate>Thu, 14 Sep 2017 15:55:39 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/running-spark-with-kubernetes-native-scheduler/</guid>
      <description>TL;DR 关于 Spark on kubernetes 的详细信息和最新进展请见 jimmysong.io - spark-on-k8s 我们之前就在 kubernetes 中运行过 standalone 方式的 spark 集群，见 Spark standalone on kubernetes。 目前运行支持 kubernetes 原生调度的 spark 程序</description>
    </item>
    
    <item>
      <title>每位CTO都该知道的关于kubernetes的三件事</title>
      <link>https://jimmysong.io/posts/3-things-every-cto-should-know-about-kubernetes/</link>
      <pubDate>Sun, 10 Sep 2017 16:43:27 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/3-things-every-cto-should-know-about-kubernetes/</guid>
      <description>Kubernetes 是一个自动发布、扩缩容和管理容器化应用的开源软件。 尽管kubernetes非常强大，有如此多有用的技术特性，但是工具从来都不会被隔离起来单</description>
    </item>
    
    <item>
      <title>使用Cloudflare为Github Pages博客开启https支持</title>
      <link>https://jimmysong.io/posts/enable-github-pages-https-with-cloudflare/</link>
      <pubDate>Sun, 03 Sep 2017 21:08:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/enable-github-pages-https-with-cloudflare/</guid>
      <description>实在受不了无耻的运营商劫持，如下图： 总是在我的网站页面上植入广告，尤其是在微信中打开我的网站链接然后选择在浏览器中打开的时候，最近总是植入广</description>
    </item>
    
    <item>
      <title>kubectl的用户认证授权</title>
      <link>https://jimmysong.io/posts/kubectl-user-authentication-authorization/</link>
      <pubDate>Thu, 31 Aug 2017 14:44:32 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubectl-user-authentication-authorization/</guid>
      <description>当我们安装好集群后，如果想要把 kubectl 命令交给用户使用，就不得不对用户的身份进行认证和对其权限做出限制。 下面以创建一个 devuser 用户并将其绑定到 dev 和 test 两个</description>
    </item>
    
    <item>
      <title>迁移传统应用到Kubernetes步骤详解——以Hadoop YARN为例</title>
      <link>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</link>
      <pubDate>Mon, 21 Aug 2017 16:56:45 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</guid>
      <description>前言 本文已归档到 kubernetes-handbook 【第三章用户指南】的【在Kubernetes中开发部署应用】小节中，一切更新以 GitHub 为准。 本文档不是说明如何在 kubernetes 中开发和部署应</description>
    </item>
    
    <item>
      <title>即日起更换域名为jimmysong.io</title>
      <link>https://jimmysong.io/posts/domain-name-jimmysong-io/</link>
      <pubDate>Fri, 18 Aug 2017 23:48:30 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/domain-name-jimmysong-io/</guid>
      <description>即日起我有了自己的独立域名 jimmysong.io，网站依然托管在 GitHub 上，原来的网址 https://jimmysong.io 依然可以访问。 为什么使用 .io 作为后缀呢？因为这是 The First Step to Cloud</description>
    </item>
    
    <item>
      <title>Kubernetes TLS bootstrap引导程序</title>
      <link>https://jimmysong.io/posts/kubernetes-tls-bootstrapping/</link>
      <pubDate>Wed, 16 Aug 2017 22:27:32 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-tls-bootstrapping/</guid>
      <description>按照 kubernetes-handbook 安装 kubernetes 集群的第一步是什么？没错，创建 TLS 证书和秘钥！作为第一步已经这么繁琐和容易出错，很多人就望而却步了，单纯的按照说明执行命令而不了解</description>
    </item>
    
    <item>
      <title>Cloud Native Python</title>
      <link>https://jimmysong.io/posts/cloud-native-python/</link>
      <pubDate>Tue, 15 Aug 2017 22:58:37 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-native-python/</guid>
      <description>继 Cloud Native Go 之后又一本关于 Cloud Native 的力作已经登上了我的写作日程，这次是基于 Python 构建微服务和云原生 Web 应用程序，书名叫作 Cloud Native Python。 下面是它的英文原</description>
    </item>
    
    <item>
      <title>微服务管理框架service mesh——Linkerd安装试用笔记</title>
      <link>https://jimmysong.io/posts/linkerd-user-guide/</link>
      <pubDate>Tue, 01 Aug 2017 21:22:55 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/linkerd-user-guide/</guid>
      <description>前言 该文章已归档到 kubernetes-handbook 第五章【领域应用】中，一切内容以 kubernetes-handbook 为准，该文档可能不会及时更新。 以下内容参考：A Service Mesh for Kubernetes Linkerd 作为一款 service mesh 与kubernet</description>
    </item>
    
    <item>
      <title>迁移到云原生应用架构指南</title>
      <link>https://jimmysong.io/posts/migrating-to-cloud-native-architecture/</link>
      <pubDate>Thu, 27 Jul 2017 20:41:55 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/migrating-to-cloud-native-architecture/</guid>
      <description>迁移到云原生应用架构 本书是 Migrating to Cloud Native Application Architectures 的中文版。 本书托管地址 - Github Gitbook 阅读地址 译者序 云时代的云原生应用大势已来，将传统的单体架构应用迁移到云原生</description>
    </item>
    
    <item>
      <title>适用于kubernetes的应用开发与部署流程详解</title>
      <link>https://jimmysong.io/posts/deploy-applications-in-kubernetes/</link>
      <pubDate>Thu, 20 Jul 2017 19:41:53 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/deploy-applications-in-kubernetes/</guid>
      <description>本文已归档在kubernetes-handbook中的第3章【用户指南】中，一切更新以kubernetes-handbook中为准。 为了详细</description>
    </item>
    
    <item>
      <title>记一本关于kubernetes management design patterns的书</title>
      <link>https://jimmysong.io/posts/book-kubernetes-management-design-patterns/</link>
      <pubDate>Thu, 20 Jul 2017 18:21:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/book-kubernetes-management-design-patterns/</guid>
      <description>书名： Kubernetes Management Design Patterns: With Docker, CoreOS Linux, and Other Platforms Amazon购买链接：链接 作者：Deepak Vohra 发行日期：2017年1月20日 出版社：Apress 页数：399 简介</description>
    </item>
    
    <item>
      <title>Kubernetes中的服务发现与docker容器间的环境变量传递源码探究</title>
      <link>https://jimmysong.io/posts/exploring-kubernetes-env-with-docker/</link>
      <pubDate>Wed, 19 Jul 2017 23:15:01 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/exploring-kubernetes-env-with-docker/</guid>
      <description>前言 今天创建了两个kubernetes示例应用： k8s-app-monitor-test：启动server用来产生metrics k8s-ap</description>
    </item>
    
    <item>
      <title>Awesome Cloud Native</title>
      <link>https://jimmysong.io/posts/awesome-cloud-native/</link>
      <pubDate>Tue, 18 Jul 2017 11:21:14 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/awesome-cloud-native/</guid>
      <description>这是一份记录关于Cloud Native的软件、工具、架构以及参考资料的列表，是我在GitHub上开的一个项目 awesome-cloud-na</description>
    </item>
    
    <item>
      <title>企业迁移到云生应用架构时所需做出的变革</title>
      <link>https://jimmysong.io/posts/changes-needed-to-cloud-native-archtecture/</link>
      <pubDate>Sun, 16 Jul 2017 15:04:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/changes-needed-to-cloud-native-archtecture/</guid>
      <description>本文译自Migrating to Cloud Native Application Architectures第二部分，归档到 Github - migrating-to-cloud-native-application-architectures 。 在变革中前行 从客户给我们下达订单开始，一直到我们收到现金</description>
    </item>
    
    <item>
      <title>什么是云原生应用架构</title>
      <link>https://jimmysong.io/posts/what-is-cloud-native-application-architecture/</link>
      <pubDate>Sat, 15 Jul 2017 16:25:30 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/what-is-cloud-native-application-architecture/</guid>
      <description>本文译自Migrating to Cloud Native Application Architectures第一部分，归档到 GitHub 。 第1章 云原生的崛起 软件正在吞噬这个世界。—Mark Andreessen 近些年来</description>
    </item>
    
    <item>
      <title>Kubernetes中的数据持久化问题的一个案例讨论与解决方案探究</title>
      <link>https://jimmysong.io/posts/data-persistence-problem/</link>
      <pubDate>Tue, 11 Jul 2017 20:33:21 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/data-persistence-problem/</guid>
      <description>本文已归档到kubernetes-handbook中的【最佳实践—运维管理】章节中，一切内容以kubernetes-handbook为准。 数</description>
    </item>
    
    <item>
      <title>Kubernetes kubectl cheat sheat——Kubectl命令参考图</title>
      <link>https://jimmysong.io/posts/kubernetes-kubectl-cheatsheat/</link>
      <pubDate>Sat, 01 Jul 2017 14:44:23 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-kubectl-cheatsheat/</guid>
      <description>参考 kuberntes API 1.6 版本 绘制。 通过该图可以对kubernetes的客户端命令kubectl有个感性和大体的了解，具体使用方法请参考官方文档。 图片归档在</description>
    </item>
    
    <item>
      <title>微服务中的服务发现方式对比</title>
      <link>https://jimmysong.io/posts/service-discovery-in-microservices/</link>
      <pubDate>Fri, 30 Jun 2017 18:32:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/service-discovery-in-microservices/</guid>
      <description>在单体架构时，因为服务不会经常和动态迁移，所有服务地址可以直接在配置文件中配置，所以也不会有服务发现的问题。但是对于微服务来说，应用的拆分，</description>
    </item>
    
    <item>
      <title>使用Jenkins进行持续构建与发布应用到kubernetes集群中</title>
      <link>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</link>
      <pubDate>Tue, 27 Jun 2017 20:52:57 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</guid>
      <description>本文已归档到kubernetes-handbook中的【最佳实践—使用Jenkins进行持续构建与发布】章节中，一切内容以kubernete</description>
    </item>
    
    <item>
      <title>云原生微服务治理框架service mesh——Linkerd简介</title>
      <link>https://jimmysong.io/posts/linkerd-introduction/</link>
      <pubDate>Mon, 26 Jun 2017 21:02:13 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/linkerd-introduction/</guid>
      <description>前言 Linkerd是一个用于云原生应用的开源、可扩展的service mesh（一般翻译成服务网格，还有一种说法叫”服务啮合层“，见Istio</description>
    </item>
    
    <item>
      <title>Kubernetes Pod Cheat Sheet——Pod数据结构参考图</title>
      <link>https://jimmysong.io/posts/kubernetes-pod-cheetsheet/</link>
      <pubDate>Sat, 24 Jun 2017 14:20:39 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-pod-cheetsheet/</guid>
      <description>昨天晚上构思，今天花了一上午的时间翻阅了下kubernetes api reference，画了一个Kubernetes Pod Cheat Sheet。 从Pod的数</description>
    </item>
    
    <item>
      <title>使用API blueprint创建API文档</title>
      <link>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</link>
      <pubDate>Fri, 23 Jun 2017 12:24:12 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</guid>
      <description>在进行微服务开发的过程中，为了保证最终开发的系统跟最初的设计保持一致，约定RESTful接口之间的调用方法，我们需要将API设计文档化，因此</description>
    </item>
    
    <item>
      <title>使用Wercker进行持续构建与发布</title>
      <link>https://jimmysong.io/posts/continuous-integration-with-wercker/</link>
      <pubDate>Thu, 22 Jun 2017 18:08:51 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/continuous-integration-with-wercker/</guid>
      <description>本文介绍了wercker和它的基本用法，并用我GitHub上的magpie应用作为示例，讲解如何给GitHub项目增加wercker构建流程</description>
    </item>
    
    <item>
      <title>kubernetes client-go包使用示例</title>
      <link>https://jimmysong.io/posts/kubernetes-client-go-sample/</link>
      <pubDate>Wed, 21 Jun 2017 19:23:45 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-client-go-sample/</guid>
      <description>前言 本文将归档到kubernetes-handbook的【开发指南—client-go示例】章节中，最终版本以kubernetes-hand</description>
    </item>
    
    <item>
      <title>kubernetes管理的容器命名规则解析</title>
      <link>https://jimmysong.io/posts/kubernetes-container-naming-rule/</link>
      <pubDate>Thu, 15 Jun 2017 21:52:38 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-container-naming-rule/</guid>
      <description>本文将归档到kubernetes-handbook的【运维管理-监控】章节中，最终版本以kubernetes-handbook中为准。 当我们</description>
    </item>
    
    <item>
      <title>Kubernetes配置最佳实践</title>
      <link>https://jimmysong.io/posts/configuration-best-practice/</link>
      <pubDate>Wed, 14 Jun 2017 20:03:09 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/configuration-best-practice/</guid>
      <description>前言 本文档旨在汇总和强调用户指南、快速开始文档和示例中的最佳实践。该文档会很很活跃并持续更新中。如果你觉得很有用的最佳实践但是本文档中没有包</description>
    </item>
    
    <item>
      <title>Cloud Native Go - 基于Go和React的web云原生应用构建指南</title>
      <link>https://jimmysong.io/posts/cloud-native-go/</link>
      <pubDate>Tue, 06 Jun 2017 22:23:54 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-native-go/</guid>
      <description>Kevin Hoffman和Dan Nemeth著的《Cloud Native Go - 基于Go和React的web云原生应用构建指南》已由电子工业出版社出版。 扫码购买 简</description>
    </item>
    
    <item>
      <title>微服务管理框架service mesh——Istio简介</title>
      <link>https://jimmysong.io/posts/istio-overview/</link>
      <pubDate>Fri, 02 Jun 2017 11:27:57 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-overview/</guid>
      <description>前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kubernetes-handbook为准。</description>
    </item>
    
    <item>
      <title>微服务管理框架service mesh——Istio安装试用笔记</title>
      <link>https://jimmysong.io/posts/istio-installation/</link>
      <pubDate>Thu, 01 Jun 2017 20:18:57 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/istio-installation/</guid>
      <description>前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kubernetes-handbook为准。</description>
    </item>
    
    <item>
      <title>使用filebeat收集kubernetes中的应用日志</title>
      <link>https://jimmysong.io/posts/kubernetes-filebeat/</link>
      <pubDate>Wed, 17 May 2017 17:24:52 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-filebeat/</guid>
      <description>前言 本文已同步更新到Github仓库kubernetes-handbook中。 昨天写了篇文章使用Logstash收集Kubernetes的应</description>
    </item>
    
    <item>
      <title>使用Logstash收集Kubernetes的应用日志</title>
      <link>https://jimmysong.io/posts/kubernetes-logstash/</link>
      <pubDate>Tue, 16 May 2017 17:46:15 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-logstash/</guid>
      <description>前言 本文同步更新到Github仓库kubernetes-handbook中。 很多企业内部都有自己的ElasticSearch集群，我们没有必</description>
    </item>
    
    <item>
      <title>Kubernete概念解析之Deployment</title>
      <link>https://jimmysong.io/posts/kubernetes-concept-deployment/</link>
      <pubDate>Sat, 13 May 2017 00:46:37 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-concept-deployment/</guid>
      <description>前言 本文同步更新到Github仓库kubernetes-handbook中。 本文翻译自kubernetes官方文档 - Deployement 本文章根据2017年5</description>
    </item>
    
    <item>
      <title>Kubernetes中的Rolling Update服务滚动升级</title>
      <link>https://jimmysong.io/posts/kubernetes-service-rolling-update/</link>
      <pubDate>Wed, 10 May 2017 17:14:20 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-service-rolling-update/</guid>
      <description>前言 本文已同步到gitbook kubernetes-handbook的第8章第1节。 本文说明在Kubernetes1.6中服务如何滚动升级，</description>
    </item>
    
    <item>
      <title>使用traefik和keepalived配置kubernetes的边缘节点</title>
      <link>https://jimmysong.io/posts/kubernetes-edge-node-configuration/</link>
      <pubDate>Tue, 09 May 2017 12:59:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-edge-node-configuration/</guid>
      <description>前言 为了配置kubernetes中的traefik ingress的高可用，对于kubernetes集群以外只暴露一个访问入口，需要使用kee</description>
    </item>
    
    <item>
      <title>在kubernetes中使用glusterfs做持久化存储</title>
      <link>https://jimmysong.io/posts/kubernetes-with-glusterfs/</link>
      <pubDate>Thu, 04 May 2017 20:06:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-with-glusterfs/</guid>
      <description>前言 本文章已同步到kubernetes-handbook 7.1章节。 Kubernetes集群沿用跟我一起部署kubernetes1.6集群中</description>
    </item>
    
    <item>
      <title>Kubernetes网络和集群性能测试</title>
      <link>https://jimmysong.io/posts/kubernetes-performance-test/</link>
      <pubDate>Tue, 25 Apr 2017 22:14:49 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-performance-test/</guid>
      <description>前言 该测试是为了测试在不同的场景下，访问kubernetes的延迟以及kubernetes的性能。进行以下测试前，你需要有一个部署好的kub</description>
    </item>
    
    <item>
      <title>运用kubernetes进行分布式负载测试</title>
      <link>https://jimmysong.io/posts/distributed-load-testing-using-kubernetes/</link>
      <pubDate>Mon, 24 Apr 2017 21:32:52 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/distributed-load-testing-using-kubernetes/</guid>
      <description>前言 本示例来自 GitHub - distributed-load-testing-using-kubernetes。 该教程描述如何在Kubernetes中</description>
    </item>
    
    <item>
      <title>Kubernetes中的IP和服务发现体系</title>
      <link>https://jimmysong.io/posts/ip-and-service-discovry-in-kubernetes/</link>
      <pubDate>Mon, 24 Apr 2017 16:11:16 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/ip-and-service-discovry-in-kubernetes/</guid>
      <description>Cluster IP 即Service的IP，通常在集群内部使用Service Name来访问服务，用户不需要知道该IP地址，kubedns会自动根据servi</description>
    </item>
    
    <item>
      <title>Kubernetes中的RBAC支持</title>
      <link>https://jimmysong.io/posts/kubernetes-rbac-support/</link>
      <pubDate>Fri, 21 Apr 2017 19:53:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-rbac-support/</guid>
      <description>在Kubernetes1.6版本中新增角色访问控制机制（Role-Based Access，RBAC）让集群管理员可以针对特定使用者或服务账号</description>
    </item>
    
    <item>
      <title>Kubernetes traefik ingress安装试用</title>
      <link>https://jimmysong.io/posts/traefik-ingress-installation/</link>
      <pubDate>Thu, 20 Apr 2017 22:38:40 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/traefik-ingress-installation/</guid>
      <description>前言 昨天翻了下Ingress解析，然后安装试用了下traefik，过程已同步到kubernetes-handbook上，Github地址 In</description>
    </item>
    
    <item>
      <title>Kubernetes ingress解析</title>
      <link>https://jimmysong.io/posts/kubernetes-ingress-resource/</link>
      <pubDate>Wed, 19 Apr 2017 21:05:47 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-ingress-resource/</guid>
      <description>前言 这是kubernete官方文档中Ingress Resource的翻译，因为最近工作中用到，文章也不长，也很好理解，索性翻译一下，也便于自</description>
    </item>
    
    <item>
      <title>Kubernetes Handbook发起</title>
      <link>https://jimmysong.io/posts/kubernetes-handbook-startup/</link>
      <pubDate>Fri, 14 Apr 2017 19:33:27 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-handbook-startup/</guid>
      <description>Kubernetes 是 Google 基于 Borg 开源的容器编排调度引擎，作为 CNCF（Cloud Native Computing Foundation）最重要的组件之一，它的目标不仅仅是一个编排系统，而是提</description>
    </item>
    
    <item>
      <title>Kubernetes1.6集群部署完全指南——二进制文件部署开启TLS基于CentOS7发布</title>
      <link>https://jimmysong.io/posts/kubernetes-installation-document/</link>
      <pubDate>Thu, 13 Apr 2017 14:00:04 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-installation-document/</guid>
      <description>这可能是目前为止最详细的kubernetes安装文档了。 经过几天的安装、调试、整理，今天该文档终于发布了。 你可以在这里看到文档和配置文件和我</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装EFK</title>
      <link>https://jimmysong.io/posts/kubernetes-efk-installation-with-tls/</link>
      <pubDate>Thu, 13 Apr 2017 12:28:10 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-efk-installation-with-tls/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署kubernetes的过程产</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装heapster</title>
      <link>https://jimmysong.io/posts/kubernetes-heapster-installation-with-tls/</link>
      <pubDate>Wed, 12 Apr 2017 20:20:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-heapster-installation-with-tls/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署kubernetes的过程产</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装dashboard</title>
      <link>https://jimmysong.io/posts/kubernetes-dashboard-installation-with-tls/</link>
      <pubDate>Wed, 12 Apr 2017 15:53:39 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-dashboard-installation-with-tls/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署kubernetes的过程产</description>
    </item>
    
    <item>
      <title>Kubernetes安装之kubedns配置</title>
      <link>https://jimmysong.io/posts/kubernetes-kubedns-installation/</link>
      <pubDate>Wed, 12 Apr 2017 13:04:45 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-kubedns-installation/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署kubernetes的过程产</description>
    </item>
    
    <item>
      <title>Kubernetes node节点安装</title>
      <link>https://jimmysong.io/posts/kubernetes-node-installation/</link>
      <pubDate>Tue, 11 Apr 2017 22:20:31 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-node-installation/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署kubernetes的过程产</description>
    </item>
    
    <item>
      <title>Kubernetes集群master节点安装</title>
      <link>https://jimmysong.io/posts/kubernetes-ha-master-installation/</link>
      <pubDate>Tue, 11 Apr 2017 19:55:56 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-ha-master-installation/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下文是结合我之前部署kubernetes的过</description>
    </item>
    
    <item>
      <title>Kubernetes安装之etcd高可用配置</title>
      <link>https://jimmysong.io/posts/kubernetes-etcd-ha-config/</link>
      <pubDate>Tue, 11 Apr 2017 15:21:39 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-etcd-ha-config/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下文是结合我之前部署kubernetes的过</description>
    </item>
    
    <item>
      <title>Kubernetes安装之创建kubeconfig文件</title>
      <link>https://jimmysong.io/posts/kubernetes-create-kubeconfig/</link>
      <pubDate>Tue, 11 Apr 2017 14:34:54 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-create-kubeconfig/</guid>
      <description>前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下文是结合我之前部署kubernetes的过</description>
    </item>
    
    <item>
      <title>开源微服务管理平台fabric8简介</title>
      <link>https://jimmysong.io/posts/fabric8-introduction/</link>
      <pubDate>Mon, 10 Apr 2017 21:39:00 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/fabric8-introduction/</guid>
      <description>前言 无意中发现Fabric8这个对于Java友好的开源微服务管理平台。 其实这在这里发现的Achieving CI/CD with Kubernetes（by Ramit Surana,on</description>
    </item>
    
    <item>
      <title>Kubernetes安装之证书验证</title>
      <link>https://jimmysong.io/posts/kubernetes-tls-certificate/</link>
      <pubDate>Mon, 10 Apr 2017 17:28:41 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-tls-certificate/</guid>
      <description>前言 昨晚（Apr 9,2017）金山软件的opsnull发布了一个开源项目和我一步步部署kubernetes集群，下文是结合我之前部署kube</description>
    </item>
    
    <item>
      <title>云计算技术架构与实践（第二版）读后感</title>
      <link>https://jimmysong.io/posts/cloud-computing-architecture-practice/</link>
      <pubDate>Sat, 08 Apr 2017 12:29:36 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-computing-architecture-practice/</guid>
      <description>前言 最近（2017年3月）友人推荐了一本书，是华为的工程师写的《云计算架构与实践第二版》，正好在网上找到了这本书的pdf，分享给大家，点这里</description>
    </item>
    
    <item>
      <title>使用Fluentd和ElasticSearch收集Kubernetes集群日志</title>
      <link>https://jimmysong.io/posts/kubernetes-fluentd-elasticsearch-installation/</link>
      <pubDate>Fri, 07 Apr 2017 20:13:24 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-fluentd-elasticsearch-installation/</guid>
      <description>前言 在安装好了Kubernetes集群、配置好了flannel网络、安装了Kubernetes Dashboard和配置Heapster监控插</description>
    </item>
    
    <item>
      <title>Kubernetes的ConfigMap解析</title>
      <link>https://jimmysong.io/posts/kubernetes-configmap-introduction/</link>
      <pubDate>Thu, 06 Apr 2017 21:24:20 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-configmap-introduction/</guid>
      <description>前言 为什么要翻译这篇文章，是因为我在使用Fluentd和ElasticSearch收集Kubernetes集群日志的时候遇到了需要修改镜像中</description>
    </item>
    
    <item>
      <title>TensorFlow深度学习手写数字识别初体验</title>
      <link>https://jimmysong.io/posts/tensorflow-and-deep-learning-without-a-phd/</link>
      <pubDate>Wed, 05 Apr 2017 21:52:01 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/tensorflow-and-deep-learning-without-a-phd/</guid>
      <description>前言 TensorFlow学习曲线是陡峭的，不是所有的IT从业人员都很容易参与的，你需要有一定的数学专业知识，对于对深度学习没有经验的程序员，</description>
    </item>
    
    <item>
      <title>Kubernetes heapster监控插件安装文档</title>
      <link>https://jimmysong.io/posts/kubernetes-heapster-installation/</link>
      <pubDate>Wed, 05 Apr 2017 18:41:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-heapster-installation/</guid>
      <description>前言 前面几篇文章中记录了我们安装好了Kubernetes集群、配置好了flannel网络、安装了Kubernetes Dashboard，但是</description>
    </item>
    
    <item>
      <title>Kubernetes Dashboard/Web UI安装全记录</title>
      <link>https://jimmysong.io/posts/kubernetes-dashboard-installation/</link>
      <pubDate>Wed, 05 Apr 2017 14:28:51 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-dashboard-installation/</guid>
      <description>几天在CentOS7.2上安装Kubernetes1.6和安装好flannel网络配置，今天我们来安装下kuberentnes的dashbo</description>
    </item>
    
    <item>
      <title>容器技术在大数据场景下的应用——Yarn on Docker</title>
      <link>https://jimmysong.io/posts/yarn-on-docker/</link>
      <pubDate>Tue, 04 Apr 2017 00:19:04 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/yarn-on-docker/</guid>
      <description>作者：宋净超 TalkingData云计算及大数据工程师 前言 我已就该话题已在2016年上海Qcon上发表过演讲，点此观看。 另外InfoQ网站上</description>
    </item>
    
    <item>
      <title>两款图片处理工具——Google Guetzli和基于AI的Deep Photo Style Transfer</title>
      <link>https://jimmysong.io/posts/picture-process/</link>
      <pubDate>Sun, 02 Apr 2017 20:27:00 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/picture-process/</guid>
      <description>前言 如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司PiedPipper，他们就是靠自己发明的视频压缩算法来跟大公司Hooli竞争的，这</description>
    </item>
    
    <item>
      <title>Kubernetes基于flannel的网络配置</title>
      <link>https://jimmysong.io/posts/kubernetes-network-config/</link>
      <pubDate>Fri, 31 Mar 2017 11:05:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-network-config/</guid>
      <description>书接上文在CentOS中安装Kubernetes详细指南，这是一个系列文章，作为学习Kubernetes的心路历程吧。 本文主要讲解Kuber</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第三章TensorFlow入门</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-03/</link>
      <pubDate>Thu, 30 Mar 2017 21:34:33 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-03/</guid>
      <description>这是我阅读才云科技郑泽宇的《TensorFlow实战Google深度学习框架》的读书笔记系列文章，按照文章的章节顺序来写的。整本书的笔记归档</description>
    </item>
    
    <item>
      <title>在CentOS上安装kubernetes详细指南</title>
      <link>https://jimmysong.io/posts/kubernetes-installation-on-centos/</link>
      <pubDate>Thu, 30 Mar 2017 20:44:20 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/kubernetes-installation-on-centos/</guid>
      <description>作者：Jimmy Song，Peter Ma，2017年3月30日 最近决定从Docker Swarm Mode投入到Kubernetes的怀抱，对Docke</description>
    </item>
    
    <item>
      <title>使用Swagger定义RESTful API</title>
      <link>https://jimmysong.io/posts/use-swagger-to-define-restful-api/</link>
      <pubDate>Fri, 24 Mar 2017 10:57:31 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/use-swagger-to-define-restful-api/</guid>
      <description>Swagger不是一个新东西，出来已经好几年了，现在常用的2.0版本是2014年9月发布的，它是用来设计RESTful API的一个常用工具。</description>
    </item>
    
    <item>
      <title>Go语言中的并发编程总结</title>
      <link>https://jimmysong.io/posts/golang-concurrency-summary/</link>
      <pubDate>Fri, 24 Mar 2017 08:36:29 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/golang-concurrency-summary/</guid>
      <description>Go语言并发编程总结 Golang :不要通过共享内存来通信，而应该通过通信来共享内存。这句风靡在Go社区的话,说的就是 goroutine中的 channe</description>
    </item>
    
    <item>
      <title>Pivotal Cloud foundry快速开始指南</title>
      <link>https://jimmysong.io/posts/cloud-foundry-tryout/</link>
      <pubDate>Thu, 23 Mar 2017 22:54:18 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/cloud-foundry-tryout/</guid>
      <description>前言 最近研究了下Pivotal的Cloud foundry，CF本身是一款开源软件，很多PAAS厂商都加入了CF，我们用的是的PCF Dev（P</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第二章TensorFlow环境搭建</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-02/</link>
      <pubDate>Thu, 23 Mar 2017 19:34:33 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-02/</guid>
      <description>这是我阅读才云科技郑泽宇的《TensorFlow实战Google深度学习框架》的读书笔记系列文章，按照文章的章节顺序来写的。整本书的笔记归档</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第一章深度学习简介</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-01/</link>
      <pubDate>Mon, 20 Mar 2017 22:04:33 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-01/</guid>
      <description>（题图：TensofFlow实战图书封面） 🙏电子工业出版社编辑赠书，能够这么快的拿到这本书，也🙏才云科技的郑泽宇大哥耐心的写了这本书，能够让</description>
    </item>
    
    <item>
      <title>Docker源码分析第一篇——代码结构</title>
      <link>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</link>
      <pubDate>Sun, 19 Mar 2017 23:00:29 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</guid>
      <description>前言 之前陆陆续续看过一点docker的源码，都未成体系，最近在研究Docker-17.03-CE，趁此机会研究下docker的源码，在网上找</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://jimmysong.io/about/</link>
      <pubDate>Sat, 18 Mar 2017 20:53:54 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/about/</guid>
      <description>Info Jimmy Song（宋净超） Beijing, China 🇨🇳 Major in Software Engineering Career iFlytek （科大讯飞) TalkingData Ant Financial（蚂蚁金服）current➡️招贤纳士 Books Translations Cloud Native Go - 构建基于Go和</description>
    </item>
    
    <item>
      <title>零基础使用Hugo和GitHub Pages创建自己的博客</title>
      <link>https://jimmysong.io/posts/building-github-pages-with-hugo/</link>
      <pubDate>Fri, 17 Mar 2017 22:08:25 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/building-github-pages-with-hugo/</guid>
      <description>亲，你还在为虚拟主机、域名、空间而发愁吗？你想拥有自己的网站吗？你想拥有一个分享知识、留住感动，为开源事业而奋斗终身吗？那么赶快拿起你手中的</description>
    </item>
    
    <item>
      <title>Contiv Ultimate-Docker17.03CE下思科docker网络插件contiv趟坑终极版</title>
      <link>https://jimmysong.io/posts/contiv-ultimate/</link>
      <pubDate>Fri, 17 Mar 2017 17:52:37 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/contiv-ultimate/</guid>
      <description>前几天写的几篇关于Contiv的文章已经把引入坑了😂 今天这篇文章将带领大家用正确的姿势编译和打包一个contiv netplugin。 请一定要</description>
    </item>
    
    <item>
      <title>Docker17.03-CE插件开发案例</title>
      <link>https://jimmysong.io/posts/docker-plugin-develop/</link>
      <pubDate>Wed, 15 Mar 2017 13:57:26 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-plugin-develop/</guid>
      <description>当你看到这篇文章时，如果你也正在进行docker1.13+版本下的plugin开发，恭喜你也入坑了，如果你趟出坑，麻烦告诉你的方法，感恩不尽</description>
    </item>
    
    <item>
      <title>Docker 17.03-CE create plugin源码解析</title>
      <link>https://jimmysong.io/posts/docker-create-plugin/</link>
      <pubDate>Wed, 15 Mar 2017 12:09:26 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-create-plugin/</guid>
      <description>继续上一篇Docker17.03-CE插件开发的🌰，今天来看下docker create plugin的源码。 cli/command/plugin/create.go Docker命令行docker plugin creat</description>
    </item>
    
    <item>
      <title>微服务设计读书笔记</title>
      <link>https://jimmysong.io/posts/microservice-reading-notes/</link>
      <pubDate>Sat, 11 Mar 2017 15:45:27 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/microservice-reading-notes/</guid>
      <description>最近在看《微服务设计（Sam Newman著）》这本书。作者是ThoughtWorks的Sam Newman。这本书中包括很多业界是用案例，比如</description>
    </item>
    
    <item>
      <title>新浪微博开源的docker管理平台OpenDCP</title>
      <link>https://jimmysong.io/posts/weibo-opendcp/</link>
      <pubDate>Fri, 10 Mar 2017 23:54:06 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/weibo-opendcp/</guid>
      <description>前几天看到微博开源的docker管理平台opendcp，今天抽空研究了一下。 OpenDCP是一个基于Docker的云资源管理与调度平台，集镜</description>
    </item>
    
    <item>
      <title>Docker对比Kubernetes第二部分</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</link>
      <pubDate>Fri, 10 Mar 2017 22:06:32 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</guid>
      <description>本文是Docker v.s Kubernetes系列第二篇，续接上文Docker对比Kuberntes第一部分。 Kubernetes是典型的Mast</description>
    </item>
    
    <item>
      <title>Docker对比Kubernetes第一部分</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</link>
      <pubDate>Fri, 10 Mar 2017 21:09:47 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</guid>
      <description>前言 这一系列文章是对比kubernetes 和docker两者之间的差异，鉴于我之前从docker1.10.3起开始使用docker，对原生d</description>
    </item>
    
    <item>
      <title>Contiv入坑指南-v2plugin</title>
      <link>https://jimmysong.io/posts/contiv-v2plugin/</link>
      <pubDate>Fri, 10 Mar 2017 11:51:09 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/contiv-v2plugin/</guid>
      <description>继续趟昨天挖的坑。 昨天的issue-776已经得到@gkvijay的回复，原来是因为没有安装contiv/v2plugin的缘故，所以cre</description>
    </item>
    
    <item>
      <title>思科开源docker网络插件Contiv简介</title>
      <link>https://jimmysong.io/posts/contiv-guide/</link>
      <pubDate>Thu, 09 Mar 2017 11:28:34 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/contiv-guide/</guid>
      <description>Contiv是思科开发的docker网络插件，从2015年就开源了，业界通常拿它和Calico比较。貌似Contiv以前还开发过volume</description>
    </item>
    
    <item>
      <title>开源镜像定义工具Packer简介</title>
      <link>https://jimmysong.io/posts/packer-intro/</link>
      <pubDate>Thu, 09 Mar 2017 10:58:42 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/packer-intro/</guid>
      <description>昨天研究了下Vagrant，感觉它的虚拟机ruby格式定义很麻烦，经人指点还有一个叫做packer的东西，也是Hashicorp这家公司出品</description>
    </item>
    
    <item>
      <title>Vagrant介绍-从使用到放弃再到掌握完全指南</title>
      <link>https://jimmysong.io/posts/vagrant-intro/</link>
      <pubDate>Wed, 08 Mar 2017 20:40:08 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/vagrant-intro/</guid>
      <description>起源 久闻Vagrant大名，之前经常看到有开源项目使用它作为分布式开发的环境配置。 因为今天在看contiv正好里面使用vagrant搭建的开</description>
    </item>
    
    <item>
      <title>Docker技术选型</title>
      <link>https://jimmysong.io/posts/docker-tech-selection/</link>
      <pubDate>Wed, 08 Mar 2017 10:37:01 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-tech-selection/</guid>
      <description>回顾历史 多少次我回过头看看走过的路，你还在小村旁。 去年基于docker1.11对Hadoop yarn进行了docker化改造，详情请看大数据</description>
    </item>
    
    <item>
      <title>Docker源码编译和开发环境搭建</title>
      <link>https://jimmysong.io/posts/docker-dev-env/</link>
      <pubDate>Mon, 06 Mar 2017 17:03:19 +0800</pubDate>
      <author>jimmysong@jimmysong.io (Jimmy Song(宋净超))</author>
      <guid>https://jimmysong.io/posts/docker-dev-env/</guid>
      <description>看了下网上其他人写的docker开发环境搭建，要么是在ubuntu下搭建，要么就是使用官方说明的build docker-dev镜像的方式一步</description>
    </item>
    
  </channel>
</rss>